const graphData = {
  nodes: [], // Здесь будут все уникальные слова и кластеры
  links: []  // Здесь будут связи между словами и кластерами
};

// Добавляем узлы-кластеры
const clusters = [
  "Роль и образ руководителя",
  "Образовательный процесс и развитие",
  "Взаимодействие и атмосфера",
  "Личность и участники",
  "Мотивация и энергия",
  "Контекст и ориентиры",
  "Отдых и перезагрузка"
];

clusters.forEach(clusterName => {
  // Убедитесь, что кластеры добавляются как объекты с 'id'
  graphData.nodes.push({ id: clusterName, type: "cluster" });
});

// Добавляем слова и их связи с кластерами
const wordToClusterMap = {
  // Роль и образ руководителя
  "Директор": ["Роль и образ руководителя"],
  "Директор - призвание": ["Роль и образ руководителя"],
  "Руководитель": ["Роль и образ руководителя"],
  "Авторитетный": ["Роль и образ руководителя"],
  "Лидер": ["Роль и образ руководителя"],
  "Компетенции директора": ["Роль и образ руководителя", "Профессиональное развитие"],
  "Кто такой директор": ["Роль и образ руководителя"],
  "Компетенции": ["Роль и образ руководителя", "Профессиональное развитие"],
  "Профессионализм": ["Роль и образ руководителя", "Профессиональное развитие", "Взаимодействие и атмосфера"], // Изменил кластер
  "Функции": ["Роль и образ руководителя", "Профессиональное развитие"],
  "Функционал": ["Роль и образ руководителя", "Профессиональное развитие"],
  "Должностная": ["Роль и образ руководителя", "Профессиональное развитие"],
  "Делегирование": ["Роль и образ руководителя", "Профессиональное развитие"],
  "Басюк": ["Роль и образ руководителя", "Взаимодействие и атмосфера"],
  "Всевышнук": ["Роль и образ руководителя", "Взаимодействие и атмосфера"],
  "Модель": ["Роль и образ руководителя", "Образовательный процесс и развитие"],

  // Образовательный процесс и развитие
  "Воспитание": ["Образовательный процесс и развитие"],
  "Воспитания": ["Образовательный процесс и развитие"],
  "Знания": ["Образовательный процесс и развитие", "Профессиональное развитие"],
  "Система": ["Образовательный процесс и развитие", "Контекст и ориентиры"],
  "Стратегия": ["Образовательный процесс и развитие", "Профессиональное развитие", "Контекст и ориентиры"],
  "Смыслы": ["Образовательный процесс и развитие"],
  "Осмысление": ["Образовательный процесс и развитие", "Мотивация и энергия"],
  "Рефлексия": ["Образовательный процесс и развитие", "Мотивация и энергия"],
  "Полезный": ["Образовательный процесс и развитие", "Профессиональное развитие"],
  "Содержательно": ["Образовательный процесс и развитие", "Профессиональное развитие"],
  "Практичность": ["Образовательный процесс и развитие", "Профессиональное развитие"],
  "Патриотизм": ["Образовательный процесс и развитие", "Контекст и ориентиры"],

  // Взаимодействие и атмосфера
  "Команда": ["Взаимодействие и атмосфера", "Личность и участники"],
  "Командообразование": ["Взаимодействие и атмосфера", "Личность и участники"],
  "Общение": ["Взаимодействие и атмосфера", "Личность и участники"],
  "Коммуникация": ["Взаимодействие и атмосфера", "Личность и участники"],
  "Дружба": ["Взаимодействие и атмосфера", "Личность и участники"],
  "Друзья": ["Взаимодействие и атмосфера", "Личность и участники"],
  "Теплая атмосфера": ["Взаимодействие и атмосфера", "Эмоциональное состояние участников", "Личность и участники"],
  "Комфорт": ["Взаимодействие и атмосфера", "Эмоциональное состояние участников", "Личность и участники"],
  "Знакомство": ["Взаимодействие и атмосфера", "Личность и участники"],
  "Знакомства": ["Взаимодействие и атмосфера", "Личность и участники"],

  // Личность и участники
  "Личность": ["Личность и участники", "Мотивация и энергия"],
  "Человек": ["Личность и участники"],
  "Ребенок": ["Личность и участники", "Образовательный процесс и развитие"],
  "Значимый взрослый": ["Личность и участники", "Образовательный процесс и развитие", "Роль и образ руководителя"],
  "Ценности": ["Личность и участники", "Контекст и ориентиры"],
  "Любовь": ["Личность и участники", "Эмоциональное состояние участников"],
  "Интерес": ["Личность и участники", "Мотивация и энергия", "Эмоциональное состояние участников", "Образовательный процесс и развитие"],

  // Мотивация и энергия
  "Мотивация": ["Мотивация и энергия", "Личность и участники", "Профессиональное развитие"],
  "Действие": ["Мотивация и энергия", "Профессиональное развитие"],
  "Эффективно": ["Мотивация и энергия", "Профессиональное развитие"],
  "Захватывающе": ["Мотивация и энергия", "Эмоциональное состояние участников"],
  "Бодрость": ["Мотивация и энергия", "Эмоциональное состояние участников"],
  "Погружение": ["Мотивация и энергия", "Эмоциональное состояние участников", "Образовательный процесс и развитие"],
  "Впечатления": ["Мотивация и энергия", "Эмоциональное состояние участников"],
  "Перезагрузка": ["Мотивация и энергия", "Отдых и перезагрузка"],
  "Круто": ["Мотивация и энергия", "Эмоциональное состояние участников"],
  "Предвкушение": ["Мотивация и энергия", "Эмоциональное состояние участников"],
  "Признание": ["Мотивация и энергия", "Эмоциональное состояние участников", "Взаимодействие и атмосфера"],
  "Ярко": ["Мотивация и энергия", "Эмоциональное состояние участников"],
  "Активность": ["Мотивация и энергия"],

  // Контекст и ориентиры
  "Бренд": ["Контекст и ориентиры", "Роль и образ руководителя"],
  "Государство": ["Контекст и ориентиры"],
  "Государственная политика": ["Контекст и ориентиры"],
  "Высота": ["Контекст и ориентиры", "Мотивация и энергия"],
  "Горы": ["Контекст и ориентиры", "Мотивация и энергия"],
  "Пространство": ["Контекст и ориентиры"],
  "Портрет": ["Контекст и ориентиры"],
  "Скамейка": ["Контекст и ориентиры"],

  // Отдых и перезагрузка
  "Отдых": ["Отдых и перезагрузка", "Эмоциональное состояние участников"]
};

// Заполняем nodes и links
const uniqueNodes = new Set(); // Используем Set для отслеживания уникальных ID узлов

// Добавляем все слова как узлы типа "word"
for (const word in wordToClusterMap) {
  if (!uniqueNodes.has(word)) {
      graphData.nodes.push({ id: word, type: "word", text: word });
      uniqueNodes.add(word);
  }
  // Добавляем связи слова с его кластерами
  wordToClusterMap[word].forEach(clusterName => {
      // Проверяем, что кластер уже добавлен как узел.
      // Это гарантирует, что target существует в nodes.
      // Для этого нужно убедиться, что 'clusters.forEach' был выполнен первым.
      if (uniqueNodes.has(clusterName)) { // Проверяем, что кластер существует как узел
          graphData.links.push({ source: word, target: clusterName });
      } else {
          console.warn(`Кластер "${clusterName}" для слова "${word}" не найден в списке узлов.`);
      }
  });
}

// Теперь убедимся, что кластеры добавлены в nodes ДО слов
// Перемещаем добавление кластеров в начало формирования nodes

// Очищаем nodes и links и заполняем заново в правильном порядке
graphData.nodes = [];
graphData.links = [];
uniqueNodes.clear(); // Сбросим Set

// Сначала добавляем кластеры
clusters.forEach(clusterName => {
  graphData.nodes.push({ id: clusterName, type: "cluster" });
  uniqueNodes.add(clusterName); // Добавляем ID кластера в Set
});

// Затем добавляем слова и их связи
for (const word in wordToClusterMap) {
  if (!uniqueNodes.has(word)) { // Если слово еще не добавлено
      graphData.nodes.push({ id: word, type: "word", text: word });
      uniqueNodes.add(word); // Добавляем ID слова в Set
  }
  wordToClusterMap[word].forEach(clusterName => {
      // Убедимся, что и source, и target существуют как узлы
      if (uniqueNodes.has(word) && uniqueNodes.has(clusterName)) {
          graphData.links.push({ source: word, target: clusterName });
      } else {
          console.warn(`Не удалось создать связь: source "${word}" или target "${clusterName}" не найден как узел.`);
      }
  });
}